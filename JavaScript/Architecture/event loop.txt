Похоже, что V8 имеет всё-таки 2 цикла и, начиная с третьего цикла -  бесконечные, которые отвечают за обработку событий...
В ПЕРВОМ цикле он парасит var, инициализируя им undefined, а также function declaration, инициализируя им собственно тело функции (так, чтобы функция была полностью готова к вызову в начале второго цикла).
Во ВТОРОМ цикле  мы выполняем весь синхронный код, а также планируем отложенные вызовы (setTimeot и т.п) и регистрируем обработчики событий (adEventListener, on***** и т.п.).
Начиная с ТРЕТЬЕГО цикла, если время отложенных вызовов уже пришло - обрабатываем их, дальше слушаем события пользователя (пользователь нажал на кнопку или сервер прочитал файл - не важно) и обрабатываем их, в бесконечном цикле прослушивания событий (итерации называют тиком).
В ТРЕТЬЕМ или любом последующем цикле, интерпретатор также может добавлять функции в очередь, работать со стеком и т.п. (как во втором цикле - потому что обработка событий также может порождать новые отложенные вызовы (вызов setTimeot и ему подобных)
https://www.youtube.com/watch?v=8aGhZQkoFbQ&t=0s
https://learn.javascript.ru/global-object#%D0%BF%D0%BE%D1%80%D1%8F%D0%B4%D0%BE%D0%BA-%D0%B8%D0%BD%D0%B8%D1%86%D0%B8%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D0%B8
https://developer.mozilla.org/ru/docs/Web/JavaScript/EventLoop