base - общий коммит, от которого начиналось ответвление
ours - коммит текущий ветки
theirs - коммит сливаемой версии
base + (ours cnahges) + (theirs changes) -> merge


##### Слияние #####

git merge <branch> - слить изменнения из сливаемой ветки <branch> в текущую. Создать коммит слияния
--флаги git merge ...
--abort - то же что и git reset --merge
--continue - алиас для git commit при слиянии, но этот не работает при git merge --squash
--log=<n> - добавить описания всех <n> последних сливаемых коммитов в сливаемой ветке. По умолчанию последние 20
--no-commit - остановиться на этапе прерванного слияния (не делать коммит после слития изменений), используется для правки семантических конфликтов
--no-ff - запретить слияние перемоткой, вместо этого сделать коммит слияния
--ff - включить слияние перемоткой
--squash - слияние без связи с источником. Данные просто упаковываются в новый коммит

git merge-base <branch-1> <branch-2> - показать base слияния
git checkout --ours <paths> - применить версию (обновить рабочую дерикторию) текущей ветки, при конфликте
git checkout --theirs <paths> - применить версию (обновить рабочую дерикторию) сливаемой ветки, при конфликте
git checkout --merge <paths> - применить полную (обновить рабочую дерикторию) версию с маркерами конфликта (начальня версия)


### Отмена слияния ###

git reset --hard - сбрасывает индекс, сбрасывает рабочую дерикторию
git reset --merge - сбрасывает индекс, сбрасывает рабочую дерикторию, но сохраняет непроиндексированные изменения
git merge --abort - то же, что и git reset --merge, но этот не работает при git merge --squash
