##### Сброс #####

git reset <commit> - передвигает HEAD и текущую ветку на коммит
--флаги git reset ...
--hard <commit> - сбрасывает индекс, сбрасывает рабочую дерикторию
--soft <commit> - не сбрасывает индекс, не сбрасывает рабочую дерикторию
--mixed <commit> - сбрасывает индекс, не сбрасывает рабочую дерикторию (mixed - режим работы reset по умолчанию)

# reset`ы, основанные на жестком reset, они отличаются в плане работы с незакомиченными изменениями: #
git reset --keep - откат, но сохраняет изменения файла, если эти файлы в разных ветках одинаковы (прямо как checkout)
git reset --merge - сбрасывает индекс, сбрасывает рабочую дерикторию, но сохраняет непроиндексированные изменения

PS.:
Смешанный (mixed) reset позволяет указывать пути:
git reset <paths> - очистить индекс. Это антипод git add
Также mixed reset позволяет использовать такую форму:
git reset <commit> <paths> - обновляет файлы по пути paths на момент commit`а, но
обновляет ТОЛЬКО В ИНДЕКСЕ. (рабочая дериктория и репозиторий не затрагивается)
Впрочем, это редко бывает нужно, т.к. как правило мы хотим достать файлы и в рабочую
дерикторию тоже, для этого используем git checkout <commit> <paths>

git clean - удалить неотслеживаемые данные
--флаги
-d - дериктории
-x - добавленные в .gitignore 
-f - уверены, что хотим удалить, force